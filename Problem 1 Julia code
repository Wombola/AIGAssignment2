function f(c,tDo,m)
       function b(p,q,j)
        z=p
        for n=q:j
         z=z[1:size(z,1) .!= q,: ]
        end
        return z
       end
       tDr = Array{Float64}(undef, 0, 2)
       tDr = tDo
       rw=sum(tDr[1:c])
       rv=sum(tDr[1+c:c+c])
       ob=rw-m
       bv=0
       bw=0
       bTd=Array{float64}(undef, 0, 0)
       if ob<1
        return tDr
       elseif ob>0
        for i = 1:c
	 a=i+1
         tDp=tDr[setdiff(1:end, i), :]
         x=(length(tDp)/2)
         tDprw=sum(tDp[1:x])
         tDprv=sum(tDp[1+x:x+x])
         if tDprw<(m+1)
          if tDprv>bv
           if bw==0
            bv=tDprv
            bTd=tDp
            bw=tDprw
            print("Possible candidate being evaluated. \nWith a weight of:")
            print(bw)
            print("\nAnd a value of:")
            print(bv)
            print("Candidate: \n")
            display(tDp)
           elseif bw>(tDprw-1)
            bv=tDprv
            bTd=tDp
            bw=tDprw
            print("Possible candidate being evaluated. \nWith aweight of: ")
            print(bw)
            print("\nAnd a value of:")
            print(bv)
            print("Candidate: \n")
            display(tDp)
           end
          elseif tDprv==bv
           if bw>tDprw
            bv=tDprv
            bTd=tDp
            bw=tDprw
            print("Possible candidate being evaluated. \nWith aweight of: ")
            print(bw)
            print("\nAnd a value of:")
            print(bv)
            print("Candidate: \n")
            display(tDp)
           elseif bw==tDprw
            print("A candidate that is as good as the last best candidate is: \n")
            display(tDp)
           end
          end
         elseif tDprw>m
          a=i+1
          while tDprw>m
           for k = 1:(length(tDp)/2)
            tDp=tDr
	    tDp=b(tDp,i,a)
            x=(length(tDp)/2)
            tDprw=sum(tDp[1:x])
            tDprv=sum(tDp[1+x:x+x])
            if tDprw<(m+1)
             if tDprv>bv
              if bw==0
               bv=tDprv
               bTd=tDp
               bw=tDprw
               print("Possible candidate being evaluated. \nWith a weight of:")
               print(bw)
               print("\nAnd a value of:")
               print(bv)
               print("Candidate: \n")
               display(tDp)
              elseif bw>(tDprw-1)
               bv=tDprv
               bTd=tDp
               bw=tDprw
               print("Possible candidate being evaluated. \nWith a weight of:")
               print(bw)
               print("\nAnd a value of:")
               print(bv)
               print("Candidate: \n")
               display(tDp)
              end
             end
            elseif tDprv==bv
             if bw>tDprw
              bv=tDprv
              bTd=tDp
              bw=tDprw
              print("Possible candidate being evaluated. \nWith a weight of:")
              print(bw)
              print("\nAnd a value of:")
              print(bv)
              print("Candidate: \n")
              display(tDp)
             elseif bw==tDprw
              print("A candidate that is as good as the last best candidate is: \n")
              display(tDp)
             end
            end
           end
            if tDprw>m
             a=a+1
            end
          end
         end
         return bTd
        end
       else print("Maximum capacity too small to find solution")
        return nothing
       end
end
